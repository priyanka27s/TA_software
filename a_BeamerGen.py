# -*- coding: utf-8 -*-
"""
Created on Sat Nov 15 15:30:27 2014

@author: thomasaref
"""
from atom.api import Atom, Unicode, Float, List

class BeamerGen(Atom):
    file_name=Unicode('qdt_df7_ef20_w50_g50')
    mod_table_name = Unicode("IDT")
    bias=Float(-0.009)
    base_path=Unicode('/Users/thomasaref/Dropbox/Current stuff/EBLpython/testtraitfold/')
    layer=Unicode('Al')
    field_size_x=Float(100.000000)
    field_size_y=Float(100.000000)
    extentLLx=Float(-50)
    extentLLy=Float(-50)
    extentURx=Float(50)
    extentURy=Float(50)
    fl=List().tag(private=True)
    
    def gen_flow(self):
        self.fl=[]
        self.fl.append("FLOW {0}".format(self.file_name))
        self.fl.append(' ()')
        
        self.gen_import()
        self.gen_extract()
        self.gen_healing()
        self.gen_PEC()
        self.gen_export()
        self.gen_bias()
        self.create_ftxt()
        
    def gen_import(self):
        #Import
        self.fl.append('\n')
        self.fl.append('NODE Import ()')
        self.fl.append('ID       = 1')
        self.fl.append('VERSION    = 2')
        self.fl.append('COMMENT    = Import')
        self.fl.append('SHOWCOMMENT    = false')
        self.fl.append('COMMENTSIZE = 100, 50')
        self.fl.append('LABEL    = In%20DXF')
        self.fl.append('POSITION = 26, 8')
        self.fl.append('COLLECTFORLOOP = false')
        self.fl.append('OUT_PORT[0] = 2, Extract, 0')
        self.fl.append('\n')
        self.fl.append('FILE_NAME = .%2F{0}.dxf'.format(self.file_name)) 
        self.fl.append('FILE_TYPE = 4')
        self.fl.append('LAYERSET = *')
        self.fl.append('MAXIMUM_CIRCLE_ERROR = 0.001000')
        self.fl.append('MAXIMUM_SNAPPING_RANGE = 0.000500')
        self.fl.append('DATABASE_GRID = 0.001000')
        self.fl.append('USE_DXF_INTERNAL_PRECISION = true')
        self.fl.append('UNITS = Micron')
        self.fl.append('POLYMODE = POLYGON')
        self.fl.append('KEEPELEMENTORDER = false')
        self.fl.append('ENDNODE')
    
    def gen_extract(self):
        #Extract
        self.fl.append('\n')
        self.fl.append('NODE Extract ()')
        self.fl.append('ID       = 2')
        self.fl.append('VERSION    = 2')
        self.fl.append('COMMENT    = Extract')
        self.fl.append('SHOWCOMMENT    = false')
        self.fl.append('COMMENTSIZE = 100, 50')
        self.fl.append('LABEL    = Extract')
        self.fl.append('POSITION = 26, 38')
        self.fl.append('COLLECTFORLOOP = false')
        self.fl.append('IN_PORT[0] = 1, In%20DXF, 0')
        self.fl.append('OUT_PORT[0] = 3, Heal, 0')
        self.fl.append('\n')
        self.fl.append('VERSION = 2')
        self.fl.append('CELLNAME = DXF_TOP_{0}'.format(self.file_name))
        self.fl.append('LAYERSET = {0}'.format(self.layer))
        self.fl.append('EXTRACT_TYPE = INSTANCES')
        self.fl.append('REGIONBEHAVIOR = Clip')
        self.fl.append('ALLEXCEPT = false')
        self.fl.append('EXTENT_MODE = DEFAULT')
        self.fl.append('ENDNODE')
        
    def gen_healing(self):
        #Healing
        self.fl.append('\n')
        self.fl.append('NODE Healing ()')
        self.fl.append('ID       = 3')
        self.fl.append('VERSION    = 2')
        self.fl.append('COMMENT    = Heal')
        self.fl.append('SHOWCOMMENT    = false')
        self.fl.append('COMMENTSIZE = 100, 50')
        self.fl.append('LABEL    = Heal')
        self.fl.append('POSITION = 26, 68')
        self.fl.append('COLLECTFORLOOP = false')
        self.fl.append('IN_PORT[0] = 2, Extract, 0')
        self.fl.append('OUT_PORT[0] = 6, Bias, 0')
        self.fl.append('PROCESSING_MODE = HEALING')
        self.fl.append('SELECTED_LAYER_SET = *')
        self.fl.append('LAYER_ASSIGNMENT = AllLayer')
        self.fl.append('\n')
        self.fl.append('VERSION = 1')
        self.fl.append('TARGET_LAYER = 1(0)')
        self.fl.append('SOFTFRAME = 0.300000')
        self.fl.append('PROCESSHIERARCHIC = true')
        self.fl.append('ENDNODE')
    
    def gen_PEC(self):
        #PEC
        self.fl.append('\n')
        self.fl.append('NODE PEC ()')
        self.fl.append('ID       = 4')
        self.fl.append('VERSION    = 2')
        self.fl.append('COMMENT    = PEC%20120nm%20Resist%20on%20LiNbO3%20')
        self.fl.append('SHOWCOMMENT    = false')
        self.fl.append('COMMENTSIZE = 100, 50')
        self.fl.append('LABEL    = PEC%20120nm')
        self.fl.append('POSITION = 26, 128')
        self.fl.append('COLLECTFORLOOP = false')
        self.fl.append('IN_PORT[0] = 6, Bias, 0')
        self.fl.append('OUT_PORT[0] = 5, Out%20JEOL52, 0')
        self.fl.append('\n')
        self.fl.append('VERSION = 1')
        self.fl.append('\n')
        self.fl.append('BETA  = 30.000000')
        self.fl.append('ETA   = 0.600000')
        self.fl.append('BlurVariabiliy = false')
        self.fl.append('ELEMENT_SIZE = 1.000000')
        self.fl.append('BLUR_FACTOR = 1.000000')
        self.fl.append('BEAM_SIZE = 0.010000')
        self.fl.append('USER_DEFINED_SEPARATION_VALUE = false')
        self.fl.append('SEPARATION_VALUE = 0.100000')
        self.fl.append('PEC_ACCURACY = 1')
        self.fl.append('MAX_NUM_DOSECLASSES = 127')
        self.fl.append('DOSE_CLASS_MODE = ACCURACY')
        self.fl.append('FRACTURE_GRID = 0.0060000')
        self.fl.append('MINIMUM_FIGURE_SIZE = 0.100000')
        self.fl.append('MINIMUM_FIGURE_SIZE_SHORT_RANGE = 0.100000')
        self.fl.append('MINIMUM_DOSE_FACTOR = 0.100000')
        self.fl.append('MAXIMUM_DOSE_FACTOR = 10.000000')
        self.fl.append('AUTOMATIC_MINIMUM_FIGURE_SIZE = true')
        self.fl.append('HIERARCHIC_SHORT_RANGE = true')
        self.fl.append('HIERARCHIC_LONG_RANGE = false')
        self.fl.append('RECTANGULAR_FRACTURING = false')
        self.fl.append('PERIODIC_LAYOUT = false')
        self.fl.append('PITCHX = 0.000000')
        self.fl.append('PITCHY = 0.000000')
        self.fl.append('REPX = 1')
        self.fl.append('REPY = 1')
        self.fl.append('PSFType = Numeric')
        self.fl.append('MID_RANGE_ACTIVATION_THRESHOLD  = 2.000000')
        self.fl.append('SINGLE_LINE_BEAM_WIDTH = 0.000000')
        self.fl.append('SR_LAYER = *')
        self.fl.append('LR_LAYER = *')
        self.fl.append('FRACTURE_LAYER = *')
        self.fl.append('INCLUDE_LONGRANGE = true')
        self.fl.append('FAST_APPROXIMATION = true')
        #self.fl.append('PSF_FILENAME = ..%2F..%2Fshared_pecs%2FBeamer%2F100kV%2FLiNbO3%2FLiNbO3-120nmResistAdv%40100nm.txt')
        self.fl.append('PSF_FILENAME = ..%2F..%2F..%2Fshared_pecs%2FBeamer%2F100kV%2FLiNbO3%2FLiNbO3-120nmResistAdv%40100nm.txt')
        #self.fl.append('%2Fhome%2Faref%2Febserver%2Fshared_pecs%2FBeamer%2F100kV%2FLiNbO3%2FLiNbO3-120nmResistAdv%40100nm.txt')
        self.fl.append('FIT_RESULTS_IN = false')
        self.fl.append('ResistEffects = false')
        self.fl.append('ResistEffectInfluenceRange = 1.000000')
        self.fl.append('Density = 0.000000')
        self.fl.append('DevelopmentRate = 1.000000')
        self.fl.append('Density = 1.000000')
        self.fl.append('DevelopmentRate = 1.000000')
        self.fl.append('EtchEffects = false')
        self.fl.append('EtchInfluenceRange = 1.000000')
        self.fl.append('EtchDensity = 0.000000')
        self.fl.append('EtchRate = 1.000000')
        self.fl.append('EtchDensity = 1.000000')
        self.fl.append('EtchRate = 1.000000')
        self.fl.append('EtchEffectsOutside = false')
        self.fl.append('EtchInfluenceRangeOutside = 1.000000')
        self.fl.append('EtchEffects2 = false')
        self.fl.append('EtchInfluenceRange2 = 1.000000')
        self.fl.append('EtchDensity2 = 0.000000')
        self.fl.append('EtchRate2 = 1.000000')
        self.fl.append('EtchDensity2 = 1.000000')
        self.fl.append('EtchRate2 = 1.000000')
        self.fl.append('EtchEffects3 = false')
        self.fl.append('EtchInfluenceRange3 = 1.000000')
        self.fl.append('EtchDensity3 = 0.000000')
        self.fl.append('EtchRate3 = 1.000000')
        self.fl.append('EtchDensity3 = 1.000000')
        self.fl.append('EtchRate3 = 1.000000')
        self.fl.append('EtchEffectsDensity = false')
        self.fl.append('EtchInfluenceRangeDensity = 0.300000')
        self.fl.append('ConvergenceOutput = false')
        self.fl.append('PSFArchiveIdentifierString = Substrate_Si_Thickness_700000_Energy_100_Layers__Resist_PMMA%20200%20nm_Z-Position_0.09_Electrons_2000000_Alpha_0_Beta_0_Eta_0_Gamma1_0_Nue1_0_Gamma2_0_Nue2_0_Simulator_mcTrace%201.0.0')
        self.fl.append('ENDNODE')
    
    def gen_export(self):
        #Export
        self.fl.append('\n')
        self.fl.append('NODE Export ()')
        self.fl.append('ID       = 5')
        self.fl.append('VERSION    = 2')
        self.fl.append('COMMENT    = Export')
        self.fl.append('SHOWCOMMENT    = false')
        self.fl.append('COMMENTSIZE = 100, 50')
        self.fl.append('LABEL    = Out%20JEOL52')
        self.fl.append('POSITION = 26, 158')
        self.fl.append('COLLECTFORLOOP = false')
        self.fl.append('IN_PORT[0] = 4, PEC%20120nm, 0')
        self.fl.append('\n')
        self.fl.append('FILE_NAME = .%2F{name}.v30'.format(name=self.file_name))
        self.fl.append('FILE_TYPE = 9')
        self.fl.append('EXTENT_USER')
        self.fl.append('EXTENT_LOWER_LEFT_X = {0}'.format(self.extentLLx))
        self.fl.append('EXTENT_LOWER_LEFT_Y = {0}'.format(self.extentLLy))
        self.fl.append('EXTENT_UPPER_RIGHT_X = {0}'.format(self.extentURx))
        self.fl.append('EXTENT_UPPER_RIGHT_Y = {0}'.format(self.extentURy))
        self.fl.append('\n')
        self.fl.append('MACHINE_TYPE = JBX-9300FS%20(100kV)')
        self.fl.append('RESOLUTION = 1')
        self.fl.append('SHOT_PITCH_MINRES = 1')
        self.fl.append('FIELD_SIZE_X = {0}'.format(self.field_size_x))
        self.fl.append('FIELD_SIZE_Y = {0}'.format(self.field_size_y))
        self.fl.append('FIELD_MEMORY_LIMIT = 256')
        self.fl.append('NORMALIZE_DOSE_RANGE = false')
        self.fl.append('PRESERVE_DOSERANGE = true')
        self.fl.append('CORRECT_LINES = false')
        self.fl.append('CENTER_TO_FIELD = true')
        self.fl.append('LINE_SHOT_RANKS = 0')
        self.fl.append('SUBFIELD_SIZE_X = 1000.000000')
        self.fl.append('SUBFIELD_SIZE_Y = 1000.000000')
        self.fl.append('EOS_MODE = 1')
        self.fl.append('SCANNING_FREQUENCY = 2')
        self.fl.append('FRACTURE_MODE = Conventional')
        self.fl.append('CURVE_TOLERANCE = 1.000000')
        self.fl.append('DOSE_MAPPING = DOSE_TO_RANK')
        self.fl.append('SHOT_TIME_MODULATION_TABLE_NAME = {0}'.format(self.mod_table_name))
        self.fl.append('TRAVERSAL_TYPE = Fixed')
        self.fl.append('MACHINE_TYPE_EOS_7_8 = HIGH_RESOLUTION')
        self.fl.append('SHOT_PITCH_FRACTURING = FALSE')
        self.fl.append('AREA_SELECTION = SelectedThenRemainder')
        self.fl.append('LIMIT_TO_SUBFIELDSIZE = false')
        self.fl.append('FLOATING_SUBFIELDSIZE = 50.000000')
        self.fl.append('FEATURE_ORDERING_TYPE = ArrayCompaction')
        self.fl.append('SORTED_ORDER_LAYER = *')
        self.fl.append('\n')
        self.fl.append('FIELD_OVERLAP_X = 0.000000')
        self.fl.append('FIELD_OVERLAP_Y = 0.000000')
        self.fl.append('OVERLAP_METHOD = Standard')
        self.fl.append('INTERLEAVING_SIZE = 0.000000')
        self.fl.append('INTERLOCK_LAYER = *')
        self.fl.append('MULTIPASS_MODE = 1')
        self.fl.append('MAINFIELD_OFFSET_X = 0.500000')
        self.fl.append('MAINFIELD_OFFSET_Y = 0.500000')
        self.fl.append('SUBFIELD_OFFSET_X = 0.500000')
        self.fl.append('SUBFIELD_OFFSET_Y = 0.500000')
        self.fl.append('MULTIPASS_LAYER = *')
        self.fl.append('ENDNODE')
    
    def gen_bias(self):
        #Bias
        self.fl.append('\n')
        self.fl.append('NODE Bias ()')
        self.fl.append('ID       = 6')
        self.fl.append('VERSION    = 2')
        self.fl.append('COMMENT    = Bias')
        self.fl.append('SHOWCOMMENT    = false')
        self.fl.append('COMMENTSIZE = 100, 50')
        self.fl.append('LABEL    = Bias')
        self.fl.append('POSITION = 26, 98')
        self.fl.append('COLLECTFORLOOP = false')
        self.fl.append('IN_PORT[0] = 3, Heal, 0')
        self.fl.append('OUT_PORT[0] = 4, PEC%20120nm, 0')
        self.fl.append('\n')
        self.fl.append('VERSION = 1')
        self.fl.append('BIAS = {0}'.format(self.bias))
        self.fl.append('CORNER_EXTENSION = 1.000000')
        self.fl.append('BIASMODE = X-Y')
        self.fl.append('PROCESSHIERARCHIC = true')
        self.fl.append('SOFTFRAME = 0.300000')
        self.fl.append('TARGET_LAYER = 0(0)')
        self.fl.append('LAYER_ASSIGNMENT = AllLayer')
        self.fl.append('SELECTED_LAYER_SET = *')
        self.fl.append('ENDNODE')
        self.fl.append('\n')
        self.fl.append('ENDFLOW')

    def create_ftxt(self):
        ftxt_str="\n".join(self.fl)
        fileout=self.base_path+self.file_name+".ftxt"
        with open(fileout, 'w') as g:
            g.write(ftxt_str)
