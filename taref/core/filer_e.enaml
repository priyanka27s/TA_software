# -*- coding: utf-8 -*-
"""
Created on Tue Feb 24 11:26:25 2015

@author: thomasaref
Implemements GUIs for saving and loading files
"""

from enaml.layout.api import vbox, hbox, spacer, align
from enaml.widgets.api import (Container, Label, PushButton, Field, ObjectCombo, Window, 
                               FileDialogEx, MultilineField, GroupBox, HGroup, VGroup)

enamldef SimpleSave(HGroup):
    padding=0
    align_widths=False
    Field: save_file_fld:
        text:=filer.file_path
    PushButton: browse_save:
        text = 'Browse'
        clicked ::
            path = FileDialogEx.get_save_file_name(current_path=filer.file_path)
            if path:
                filer.file_path = path
                filer.full_save(obj=coder)
    PushButton: save:
        text = "Save"
        clicked ::
            filer.full_save(obj=coder)

enamldef SimpleRead(HGroup):
    event rd_ev
    padding=0
    align_widths=False
    Field: read_file_fld:
        text:=filer.file_path
    PushButton: browse_open:
        text = 'Browse'
        clicked ::
            path = FileDialogEx.get_open_file_name(current_path=filer.file_path)
            if path:
                filer.file_path = path
                filer.read()
                rd_ev()
    alias clicked : rdb.clicked               
    PushButton: rdb:
        text = "Read"
        clicked ::
            filer.read()
            rd_ev()
            #filer.read_event()

enamldef FilerInterface(Container):
    padding=0
    constraints =[vbox(hbox(base_dir_lbl, base_dir_fld, base_dir),
                       hbox(main_dir_lbl, main_dir, quality_lbl, quality, main_file_lbl, main_file)),
                        main_file.width==contents_width/5]

    Label: main_dir_lbl:
        text = "Main dir:"
    Field: main_dir:
        text := filer.main_dir
    Label: main_file_lbl:
        text = "File name:"
    Field: main_file:
        text := filer.main_file
    Label: base_dir_lbl:
        text = 'Base directory'
    PushButton: base_dir:
        text = 'Browse'
        clicked ::
            path = FileDialogEx.get_existing_directory(current_path=filer.base_dir)
            if path:
                filer.base_dir = path
    Field: base_dir_fld:
        text := filer.base_dir
    Label: quality_lbl:
        text = "Quality:"
    ObjectCombo: quality:
        items = list(filer.get_member('quality').items)
        selected := filer.quality

enamldef ReadBox(VGroup):
    padding=0
    #constraints=[vbox(filread, simread)]
    SimpleRead: simread:
        pass
    FilerInterface: filread:
        pass

enamldef SaveBox(VGroup):
    padding=0
    SimpleSave:
        pass
    FilerInterface:
        pass

enamldef SaveWrap(SaveBox):
    attr filer
    attr coder: None


enamldef SimpleSaveWrap(SimpleSave):
    attr filer
    
enamldef ReadWrap(SimpleRead):
    attr filer

enamldef ReadSaveWrap(Container):
    attr save_file
    attr read_file
    attr runcode
    alias save_txt : sw.filer
    GroupBox: gb:
        #alias save_text : sw.filer
        SaveWrap: sw:
            filer=save_file
            coder=runcode
                
    ReadWrap: rw:
        filer=read_file
        rd_ev:: print "read"
    MultilineField:
        text << unicode(read_file.data)

enamldef SaveMain(Window):
    attr save_file
    attr read_file
    attr coder
    title="SaveBox test"
    VGroup:
        ReadWrap:
            rd_ev:: print "read"

            filer=read_file
            #clicked :: print "read data"
        GroupBox: gb:
            SaveWrap:
                filer=save_file
        MultilineField:
            text := read_file.data_str

enamldef ReadBoxWrap(ReadBox):
    attr filer

enamldef ReadBoxMain(Window):
    attr read_file
    title="Read test"
    activated :: self.maximize()
    destroy_on_close=False
    VGroup:
        ReadWrap:
            filer = read_file
        MultilineField:
            text := read_file.data_str

enamldef SimpleSaveMain(Window):
    attr filer
    title="SimpleSave test"
    SimpleSave:
        pass

enamldef FilerMain(Window):
    attr filer
    title="Filer test"
    VGroup:
        FilerInterface:
            pass
        Field:
            text:=filer.file_path